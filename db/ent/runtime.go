// Code generated by ent, DO NOT EDIT.

package ent

import (
	"main/db/ent/address"
	"main/db/ent/card"
	"main/db/ent/chat"
	"main/db/ent/message"
	"main/db/ent/orderstatus"
	"main/db/ent/product"
	"main/db/ent/productcategory"
	"main/db/ent/schema"
	"main/db/ent/typeofpackaging"
	"main/db/ent/user"
	"main/db/ent/usercategory"
	"main/db/ent/usertoken"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	addressFields := schema.Address{}.Fields()
	_ = addressFields
	// addressDescCity is the schema descriptor for city field.
	addressDescCity := addressFields[0].Descriptor()
	// address.CityValidator is a validator for the "city" field. It is called by the builders before save.
	address.CityValidator = addressDescCity.Validators[0].(func(string) error)
	// addressDescStreetName is the schema descriptor for street_name field.
	addressDescStreetName := addressFields[1].Descriptor()
	// address.StreetNameValidator is a validator for the "street_name" field. It is called by the builders before save.
	address.StreetNameValidator = addressDescStreetName.Validators[0].(func(string) error)
	// addressDescHouseNumber is the schema descriptor for house_number field.
	addressDescHouseNumber := addressFields[2].Descriptor()
	// address.HouseNumberValidator is a validator for the "house_number" field. It is called by the builders before save.
	address.HouseNumberValidator = addressDescHouseNumber.Validators[0].(func(string) error)
	// addressDescStoreName is the schema descriptor for store_name field.
	addressDescStoreName := addressFields[3].Descriptor()
	// address.StoreNameValidator is a validator for the "store_name" field. It is called by the builders before save.
	address.StoreNameValidator = addressDescStoreName.Validators[0].(func(string) error)
	cardFields := schema.Card{}.Fields()
	_ = cardFields
	// cardDescNumber is the schema descriptor for number field.
	cardDescNumber := cardFields[0].Descriptor()
	// card.NumberValidator is a validator for the "number" field. It is called by the builders before save.
	card.NumberValidator = cardDescNumber.Validators[0].(func(string) error)
	// cardDescName is the schema descriptor for name field.
	cardDescName := cardFields[2].Descriptor()
	// card.NameValidator is a validator for the "name" field. It is called by the builders before save.
	card.NameValidator = cardDescName.Validators[0].(func(string) error)
	// cardDescToken is the schema descriptor for token field.
	cardDescToken := cardFields[3].Descriptor()
	// card.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	card.TokenValidator = cardDescToken.Validators[0].(func(string) error)
	chatFields := schema.Chat{}.Fields()
	_ = chatFields
	// chatDescToken is the schema descriptor for token field.
	chatDescToken := chatFields[0].Descriptor()
	// chat.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	chat.TokenValidator = chatDescToken.Validators[0].(func(string) error)
	// chatDescCreatedAt is the schema descriptor for created_at field.
	chatDescCreatedAt := chatFields[1].Descriptor()
	// chat.CreatedAtValidator is a validator for the "created_at" field. It is called by the builders before save.
	chat.CreatedAtValidator = chatDescCreatedAt.Validators[0].(func(string) error)
	messageFields := schema.Message{}.Fields()
	_ = messageFields
	// messageDescText is the schema descriptor for text field.
	messageDescText := messageFields[0].Descriptor()
	// message.TextValidator is a validator for the "text" field. It is called by the builders before save.
	message.TextValidator = messageDescText.Validators[0].(func(string) error)
	// messageDescSendedAt is the schema descriptor for sended_at field.
	messageDescSendedAt := messageFields[1].Descriptor()
	// message.SendedAtValidator is a validator for the "sended_at" field. It is called by the builders before save.
	message.SendedAtValidator = messageDescSendedAt.Validators[0].(func(string) error)
	// messageDescFilePath is the schema descriptor for file_path field.
	messageDescFilePath := messageFields[2].Descriptor()
	// message.FilePathValidator is a validator for the "file_path" field. It is called by the builders before save.
	message.FilePathValidator = messageDescFilePath.Validators[0].(func(string) error)
	// messageDescFileType is the schema descriptor for file_type field.
	messageDescFileType := messageFields[3].Descriptor()
	// message.FileTypeValidator is a validator for the "file_type" field. It is called by the builders before save.
	message.FileTypeValidator = messageDescFileType.Validators[0].(func(string) error)
	orderstatusFields := schema.OrderStatus{}.Fields()
	_ = orderstatusFields
	// orderstatusDescName is the schema descriptor for name field.
	orderstatusDescName := orderstatusFields[0].Descriptor()
	// orderstatus.NameValidator is a validator for the "name" field. It is called by the builders before save.
	orderstatus.NameValidator = orderstatusDescName.Validators[0].(func(string) error)
	productFields := schema.Product{}.Fields()
	_ = productFields
	// productDescName is the schema descriptor for name field.
	productDescName := productFields[0].Descriptor()
	// product.NameValidator is a validator for the "name" field. It is called by the builders before save.
	product.NameValidator = productDescName.Validators[0].(func(string) error)
	// productDescProductComposition is the schema descriptor for product_composition field.
	productDescProductComposition := productFields[2].Descriptor()
	// product.ProductCompositionValidator is a validator for the "product_composition" field. It is called by the builders before save.
	product.ProductCompositionValidator = productDescProductComposition.Validators[0].(func(string) error)
	// productDescShelfLife is the schema descriptor for shelf_life field.
	productDescShelfLife := productFields[5].Descriptor()
	// product.ShelfLifeValidator is a validator for the "shelf_life" field. It is called by the builders before save.
	product.ShelfLifeValidator = productDescShelfLife.Validators[0].(func(string) error)
	// productDescPicture is the schema descriptor for picture field.
	productDescPicture := productFields[6].Descriptor()
	// product.PictureValidator is a validator for the "picture" field. It is called by the builders before save.
	product.PictureValidator = productDescPicture.Validators[0].(func(string) error)
	productcategoryFields := schema.ProductCategory{}.Fields()
	_ = productcategoryFields
	// productcategoryDescName is the schema descriptor for name field.
	productcategoryDescName := productcategoryFields[0].Descriptor()
	// productcategory.NameValidator is a validator for the "name" field. It is called by the builders before save.
	productcategory.NameValidator = productcategoryDescName.Validators[0].(func(string) error)
	typeofpackagingFields := schema.TypeOfPackaging{}.Fields()
	_ = typeofpackagingFields
	// typeofpackagingDescName is the schema descriptor for name field.
	typeofpackagingDescName := typeofpackagingFields[0].Descriptor()
	// typeofpackaging.NameValidator is a validator for the "name" field. It is called by the builders before save.
	typeofpackaging.NameValidator = typeofpackagingDescName.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescFullName is the schema descriptor for full_name field.
	userDescFullName := userFields[0].Descriptor()
	// user.FullNameValidator is a validator for the "full_name" field. It is called by the builders before save.
	user.FullNameValidator = userDescFullName.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPasswordHash is the schema descriptor for password_hash field.
	userDescPasswordHash := userFields[2].Descriptor()
	// user.PasswordHashValidator is a validator for the "password_hash" field. It is called by the builders before save.
	user.PasswordHashValidator = userDescPasswordHash.Validators[0].(func(string) error)
	// userDescPhoneNumber is the schema descriptor for phone_number field.
	userDescPhoneNumber := userFields[3].Descriptor()
	// user.PhoneNumberValidator is a validator for the "phone_number" field. It is called by the builders before save.
	user.PhoneNumberValidator = userDescPhoneNumber.Validators[0].(func(string) error)
	usercategoryFields := schema.UserCategory{}.Fields()
	_ = usercategoryFields
	// usercategoryDescName is the schema descriptor for name field.
	usercategoryDescName := usercategoryFields[0].Descriptor()
	// usercategory.NameValidator is a validator for the "name" field. It is called by the builders before save.
	usercategory.NameValidator = usercategoryDescName.Validators[0].(func(string) error)
	usertokenFields := schema.UserToken{}.Fields()
	_ = usertokenFields
	// usertokenDescToken is the schema descriptor for token field.
	usertokenDescToken := usertokenFields[0].Descriptor()
	// usertoken.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	usertoken.TokenValidator = usertokenDescToken.Validators[0].(func(string) error)
	// usertokenDescType is the schema descriptor for type field.
	usertokenDescType := usertokenFields[2].Descriptor()
	// usertoken.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	usertoken.TypeValidator = usertokenDescType.Validators[0].(func(string) error)
	// usertokenDescLastUsed is the schema descriptor for last_used field.
	usertokenDescLastUsed := usertokenFields[4].Descriptor()
	// usertoken.LastUsedValidator is a validator for the "last_used" field. It is called by the builders before save.
	usertoken.LastUsedValidator = usertokenDescLastUsed.Validators[0].(func(string) error)
}
